'use strict'

const mssql = require('./')

const sqlConfig = {
  password: 'Upper_l0wercase',
  database: 'di_production',
  // connectionTimeout: undefined,
  // requestTimeout: 30000,
  stream: false,
  options: {
    encrypt: true,
    readOnlyIntent: true
  },
  port: 1433,
  user: 'sa',
  server: 'localhost',
  pool: {
    // acquireTimeoutMillis: 1000,
    // propagateCreateError: true,
  },
}

// let pool
//
// function createPool() {
//   return new mssql.ConnectionPool(sqlConfig)
// }
//
// const poolRequest = createPool()
//
// function connect () {
//   console.log('trying to connect to server')
//   // const poolRequest = createPool()
//   mssql.on('error', (e) => {
//     console.log('error event fired')
//     console.error(e)
//   })
//   return poolRequest.connect(sqlConfig).then((connection) => {
//     // setTimeout(connection.close.bind(connection), 2000)
//     console.log('connection established')
//     console.log(connection)
//     connection.on('error', (e) => {
//       console.log('on error')
//       console.error(e)
//     })
//     pool = connection
//   })
// }
//
// function runQuery (result) {
//   if (result) {
//     console.log('*** RESULT ***')
//     console.log(result.recordset)
//     console.log('*** RESULT ***')
//   }
//   const request = pool.request();
//   return new Promise((resolve) => {
//     setTimeout(resolve, 10000)
//   }).then(() => request.query('SELECT 1').catch(e => {
//     console.log('query error')
//     throw e
//   })).then(runQuery)
// }
//
// connect()
//   .then(() => {
//     return runQuery()
//   })
//   .catch((e) => {
//     console.log('connection error')
//     console.error(e)
//     console.log(pool)
//     return runQuery()
//   })
//   .then(() => {
//     return pool && pool.close()
//   }).catch(() => {
//     console.log(pool)
// })

// const query = 'select 1';
//
// const quickExample = async () => {
//   try {
//     // make sure that any items are correctly URL encoded in the connection string
//     await mssql.connect(sqlConfig)
//     const result = await mssql.query(query);
//     console.log('quickExample', result);
//   } catch (err) {
//     console.error('quickExample error:', err);
//   }
// }
//
// const func = quickExample
//
// const promises = [1, 2, 3, 4, 5, 6].map(index => func(index).catch(err => console.log(`err with index ${index}!`, err)));

mssql.connect(sqlConfig)
  .then(async (pool) => {
    const query = 'SELECT [name] FROM [role] WHERE [idRole] = @id'
    return pool.request().input('id', mssql.Int, 1).query(query)
  })
  .then((result) => {
    console.log(result)
  })
  .then(() => {
    return mssql.close()
  })
  .catch((err) => {
    console.log('error handler')
    console.error(err)
    return mssql.close()
  })
